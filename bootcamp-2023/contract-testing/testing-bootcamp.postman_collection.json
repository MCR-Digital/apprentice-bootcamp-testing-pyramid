{
	"info": {
		"_postman_id": "ca903178-6c59-486e-aec8-7a5110acf4d0",
		"name": "testing-bootcamp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29891450"
	},
	"item": [
		{
			"name": "Contract test simple",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body contains the expected message\", function () {",
							"  const expectedMessage = \"This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.\";",
							"  pm.expect(pm.response.text()).to.include(expectedMessage);",
							"});",
							"",
							"pm.test(\"Response time is within acceptable range\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response body is not empty\", function () {",
							"    pm.expect(pm.response.text()).to.not.be.empty;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7071/api/TestContract",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7071",
					"path": [
						"api",
						"TestContract"
					]
				}
			},
			"response": []
		},
		{
			"name": "Contract test with name in query",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify that a customised response for the name given is returned\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Hello, Barry. This HTTP triggered function executed successfully.\");",
							"});",
							"",
							"pm.test(\"Response time is within acceptable range\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response body is not empty\", function () {",
							"    pm.expect(pm.response.text()).to.not.be.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7071/api/TestContract?name=Barry",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7071",
					"path": [
						"api",
						"TestContract"
					],
					"query": [
						{
							"key": "name",
							"value": "Barry"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Contract test with name in body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify that a customised response for the name given is returned\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Hello, Barry. This HTTP triggered function executed successfully.\");",
							"});",
							"",
							"pm.test(\"Response time is within acceptable range\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response body is not empty\", function () {",
							"    pm.expect(pm.response.text()).to.not.be.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Barry\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7071/api/TestContract",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7071",
					"path": [
						"api",
						"TestContract"
					]
				}
			},
			"response": []
		}
	]
}